<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="19ea8c2a-ceaf-44e0-8480-cb2e13ad769d" name="Changes" comment="“Added log4j back to the project and refactored buffer flush methods&#10;&#9;•&#9;Re-added log4j configuration and related changes previously removed&#10;&#9;•&#9;Refactored buffer interfaces and implementations to rename flushAndClose() to flush()&#10;&#9;•&#9;Updated VFLStarter to explicitly flush buffer after context cleanup&#10;&#9;•&#9;Added TODO comments in Main.java for RootBlock annotation and buffer flush sanity check&#10;&#9;•&#9;Enhanced async test in AnnotationTest with improved thread pool and logging">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/dev/kuku/vfl/core/dtos/BlockContext.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/dev/kuku/vfl/core/dtos/BlockContext.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/dev/kuku/vfl/impl/annotation/ThreadContextManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/dev/kuku/vfl/impl/annotation/ThreadContextManager.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Kotlin Class" />
        <option value="Record" />
        <option value="package-info" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="kuchukboramdebbarma &lt;kuchukboromd@gmail.com&gt;" />
      </list>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="enhancement/annotation-overhaul" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kuchuk-borom-debbarma&quot;
  }
}</component>
  <component name="GithubDefaultAccount">
    <option name="defaultAccountId" value="c5e8ebb7-42f0-41bc-96cf-550538c49123" />
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/kuchuk-borom-debbarma/vfl_java&quot;,
    &quot;accountId&quot;: &quot;c5e8ebb7-42f0-41bc-96cf-550538c49123&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.19.1/jackson-databind-2.19.1.jar!/com/fasterxml/jackson/databind/ObjectMapper.class" root0="SKIP_INSPECTION" />
    <setting file="jar:///opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home/lib/src.zip!/java.base/java/util/Stack.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2yFiYzEKGG67NdDzHS1Ry8iszBT" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
    "Application.ByteBuddySupplierTest.executor": "Run",
    "Application.Main.executor": "Run",
    "Application.TestBlockLibrary.executor": "Run",
    "Application.VFLBootstrap.executor": "Run",
    "JUnit.AnnotationTest.async.executor": "Run",
    "JUnit.AnnotationTest.asyncTest.executor": "Run",
    "JUnit.AnnotationTest.linear.executor": "Run",
    "JUnit.AnnotationTest.nest.executor": "Run",
    "JUnit.AnnotationTest.test.executor": "Run",
    "JUnit.ByteBuddyAlternativeTest.testCustomCompletableFutureInterception.executor": "Run",
    "JUnit.ByteBuddyInterceptorTest.executor": "Run",
    "JUnit.ByteBuddyInterceptorTest.testCompletableFutureInterception.executor": "Run",
    "JUnit.ByteBuddyInterceptorTest.testExecutionDurationMeasurement.executor": "Run",
    "JUnit.ByteBuddyInterceptorTest.testMonitoredMethodInterception.executor": "Run",
    "JUnit.ScopedFluentAPITest.test.executor": "Run",
    "JUnit.ScopedLoggerTest$SimpleTest.heavyAsync.executor": "Run",
    "JUnit.ScopedLoggerTest$SimpleTest.nonLinearFlow.executor": "Run",
    "JUnit.ScopedLoggerTest$SimpleTest.run.executor": "Run",
    "JUnit.StaticFluentThreadVFLTest.flatFlow.executor": "Run",
    "JUnit.StaticFluentThreadVFLTest.nest.executor": "Run",
    "JUnit.StaticThreadVFLTest.asyncFlow.executor": "Run",
    "JUnit.StaticThreadVFLTest.deepNestedFlow.executor": "Run",
    "JUnit.StaticThreadVFLTest.flatFlow.executor": "Run",
    "JUnit.StaticThreadVFLTest.flatNestedFlow.executor": "Run",
    "JUnit.ThreadVFLTest$AsyncFlow.asyncTest.executor": "Run",
    "JUnit.ThreadVFLTest$EventFlow.linearEventFlow.executor": "Run",
    "JUnit.ThreadVFLTest$LinearFlow.executor": "Debug",
    "JUnit.ThreadVFLTest$LinearFlow.linearFlow.executor": "Run",
    "JUnit.ThreadVFLTest.multiThreadCleanupTest.executor": "Run",
    "JUnit.ThreadVFLTest.nestedMultiThreadTest.executor": "Run",
    "JUnit.ThreadVFLTest.threadPoolTest.executor": "Run",
    "JUnit.VFLTests.executor": "Run",
    "JUnit.VFLTests.expected.executor": "Run",
    "JUnit.VFLTests.simple.executor": "Debug",
    "Maven.vfl_java [clean].executor": "Run",
    "Maven.vfl_java [compile].executor": "Run",
    "Maven.vfl_java [install].executor": "Run",
    "Maven.vfl_java [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor": "Run",
    "Maven.vfl_java [org.apache.maven.plugins:maven-compiler-plugin:3.14.0:compile].executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "ignore.preview.features.used": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/kuchukboramdebbarma/projects/Visual-Flow-Logger/client_apis/vfl_java",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/Users/kuchukboramdebbarma/projects/vfl_java/src/main/java/dev/kuku/Main.java",
    "project.structure.last.edited": "Problems",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "to.speed.mode.migration.done": "true",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.LRUPopupBuilder$1/SQL Dialect": [
      "SQLite"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="dev.kuku.vfl.impl.threadlocal.flient_steps.sub_block" />
      <recent name="dev.kuku.vfl.impl.threadlocal.flient_steps" />
      <recent name="dev.kuku.vfl.impl.threadlocal" />
      <recent name="dev.kuku.vfl.scopedVFLogger.fluentApi" />
      <recent name="dev.kuku.builder" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mds" />
      <recent name="$PROJECT_DIR$/src/main/java/dev/kuku/vfl/core/helpers" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="MoveInnerDialog.RECENTS_KEY">
      <recent name="bytebuddy" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.AnnotationTest.async">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="dev.kuku.Main" />
      <module name="vfl_java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="dev.kuku.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnnotationTest.async" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="vfl_java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="threadvfl.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="threadvfl" />
      <option name="MAIN_CLASS_NAME" value="threadvfl.AnnotationTest" />
      <option name="METHOD_NAME" value="async" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnnotationTest.asyncTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="vfl_java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="threadvfl.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="threadvfl" />
      <option name="MAIN_CLASS_NAME" value="threadvfl.AnnotationTest" />
      <option name="METHOD_NAME" value="asyncTest" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnnotationTest.linear" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="vfl_java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="threadvfl.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="threadvfl" />
      <option name="MAIN_CLASS_NAME" value="threadvfl.AnnotationTest" />
      <option name="METHOD_NAME" value="linear" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnnotationTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="vfl_java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="threadvfl.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="threadvfl" />
      <option name="MAIN_CLASS_NAME" value="threadvfl.AnnotationTest" />
      <option name="METHOD_NAME" value="test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="JUnit.AnnotationTest.async" />
      <item itemvalue="JUnit.AnnotationTest.linear" />
      <item itemvalue="JUnit.AnnotationTest.asyncTest" />
      <item itemvalue="JUnit.AnnotationTest.test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.AnnotationTest.async" />
        <item itemvalue="JUnit.AnnotationTest.linear" />
        <item itemvalue="JUnit.AnnotationTest.test" />
        <item itemvalue="JUnit.AnnotationTest.asyncTest" />
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-bf35d07a577b-intellij.indexing.shared.core-IU-252.23892.409" />
        <option value="bundled-js-predefined-d6986cc7102b-e03c56caf84a-JavaScript-IU-252.23892.409" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="19ea8c2a-ceaf-44e0-8480-cb2e13ad769d" name="Changes" comment="" />
      <created>1749436773550</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749436773550</updated>
      <workItem from="1749436774542" duration="7245000" />
      <workItem from="1749657105160" duration="32000" />
      <workItem from="1749685098079" duration="4448000" />
      <workItem from="1749696138474" duration="61000" />
      <workItem from="1749697195020" duration="8654000" />
      <workItem from="1749734601846" duration="51000" />
      <workItem from="1749735158260" duration="14444000" />
      <workItem from="1749794271956" duration="903000" />
      <workItem from="1749876195958" duration="9929000" />
      <workItem from="1750138293009" duration="22000" />
      <workItem from="1750554956430" duration="1248000" />
      <workItem from="1750556232273" duration="2138000" />
      <workItem from="1750877786953" duration="1207000" />
      <workItem from="1750879145472" duration="9000" />
      <workItem from="1751336405947" duration="10059000" />
      <workItem from="1751363163150" duration="4418000" />
      <workItem from="1751369069171" duration="24000" />
      <workItem from="1751425412929" duration="12131000" />
      <workItem from="1751445781493" duration="6475000" />
      <workItem from="1751462030478" duration="3032000" />
      <workItem from="1751472602600" duration="982000" />
      <workItem from="1751473600125" duration="6274000" />
      <workItem from="1751549512457" duration="7124000" />
      <workItem from="1751640023490" duration="1398000" />
      <workItem from="1752312321240" duration="11038000" />
      <workItem from="1752336720503" duration="805000" />
      <workItem from="1752424796454" duration="4152000" />
      <workItem from="1752440504926" duration="3640000" />
      <workItem from="1752465173613" duration="234000" />
      <workItem from="1752496231285" duration="26573000" />
      <workItem from="1752576409621" duration="3494000" />
      <workItem from="1752598552156" duration="105000" />
      <workItem from="1752598692572" duration="8218000" />
      <workItem from="1752610664696" duration="6370000" />
      <workItem from="1752656834769" duration="29272000" />
      <workItem from="1752709875382" duration="7299000" />
      <workItem from="1752748053546" duration="24019000" />
      <workItem from="1752804543015" duration="15199000" />
      <workItem from="1752833842670" duration="2288000" />
      <workItem from="1752838516300" duration="15608000" />
      <workItem from="1752880498327" duration="4924000" />
      <workItem from="1752885450746" duration="4145000" />
      <workItem from="1753384478007" duration="244000" />
      <workItem from="1753384731847" duration="433000" />
      <workItem from="1753385183964" duration="1221000" />
      <workItem from="1753386733517" duration="459000" />
      <workItem from="1753387203467" duration="125000" />
      <workItem from="1753387335802" duration="887000" />
      <workItem from="1753392698235" duration="1649000" />
      <workItem from="1753394360985" duration="518000" />
      <workItem from="1753458854483" duration="763000" />
      <workItem from="1753459631740" duration="133000" />
      <workItem from="1753459773384" duration="12000" />
      <workItem from="1753459793033" duration="475000" />
      <workItem from="1753460276470" duration="4576000" />
      <workItem from="1753512911622" duration="570000" />
      <workItem from="1753539553548" duration="8286000" />
      <workItem from="1753621987852" duration="3376000" />
      <workItem from="1753625390767" duration="3397000" />
      <workItem from="1754146490629" duration="24286000" />
      <workItem from="1754233008979" duration="21131000" />
      <workItem from="1754357082202" duration="10486000" />
      <workItem from="1754376850352" duration="9630000" />
      <workItem from="1754404906077" duration="10265000" />
      <workItem from="1754423681859" duration="81000" />
      <workItem from="1754423771713" duration="2538000" />
      <workItem from="1754443176965" duration="3932000" />
      <workItem from="1754479312633" duration="8106000" />
      <workItem from="1754494426182" duration="5496000" />
      <workItem from="1754519130424" duration="5223000" />
      <workItem from="1754590394886" duration="31946000" />
      <workItem from="1754801688885" duration="4533000" />
    </task>
    <task id="LOCAL-00153" summary="Created Static ThreadVFL wrapper for ease of use">
      <option name="closed" value="true" />
      <created>1754357417799</created>
      <option name="number" value="00153" />
      <option name="presentableId" value="LOCAL-00153" />
      <option name="project" value="LOCAL" />
      <updated>1754357417799</updated>
    </task>
    <task id="LOCAL-00154" summary="Created Static fluent">
      <option name="closed" value="true" />
      <created>1754357991850</created>
      <option name="number" value="00154" />
      <option name="presentableId" value="LOCAL-00154" />
      <option name="project" value="LOCAL" />
      <updated>1754357991850</updated>
    </task>
    <task id="LOCAL-00155" summary="Updated nest json flush handler to not inclide nulls&#10;updated statoc thread vfl and tested flat flow">
      <option name="closed" value="true" />
      <created>1754359530911</created>
      <option name="number" value="00155" />
      <option name="presentableId" value="LOCAL-00155" />
      <option name="project" value="LOCAL" />
      <updated>1754359530911</updated>
    </task>
    <task id="LOCAL-00156" summary="Removed unnecessary public functions from threadVFL">
      <option name="closed" value="true" />
      <created>1754360319872</created>
      <option name="number" value="00156" />
      <option name="presentableId" value="LOCAL-00156" />
      <option name="project" value="LOCAL" />
      <updated>1754360319872</updated>
    </task>
    <task id="LOCAL-00157" summary="Added deep nested flow">
      <option name="closed" value="true" />
      <created>1754361318984</created>
      <option name="number" value="00157" />
      <option name="presentableId" value="LOCAL-00157" />
      <option name="project" value="LOCAL" />
      <updated>1754361318984</updated>
    </task>
    <task id="LOCAL-00158" summary="Added deep nested flow">
      <option name="closed" value="true" />
      <created>1754362792366</created>
      <option name="number" value="00158" />
      <option name="presentableId" value="LOCAL-00158" />
      <option name="project" value="LOCAL" />
      <updated>1754362792366</updated>
    </task>
    <task id="LOCAL-00159" summary="Fixed string formatter bug which contains return value">
      <option name="closed" value="true" />
      <created>1754367979038</created>
      <option name="number" value="00159" />
      <option name="presentableId" value="LOCAL-00159" />
      <option name="project" value="LOCAL" />
      <updated>1754367979038</updated>
    </task>
    <task id="LOCAL-00160" summary="Basic setup done">
      <option name="closed" value="true" />
      <created>1754380870948</created>
      <option name="number" value="00160" />
      <option name="presentableId" value="LOCAL-00160" />
      <option name="project" value="LOCAL" />
      <updated>1754380870948</updated>
    </task>
    <task id="LOCAL-00161" summary="Need second main function to run">
      <option name="closed" value="true" />
      <created>1754388662287</created>
      <option name="number" value="00161" />
      <option name="presentableId" value="LOCAL-00161" />
      <option name="project" value="LOCAL" />
      <updated>1754388662287</updated>
    </task>
    <task id="LOCAL-00162" summary="Wrote basic logic but not tested yet">
      <option name="closed" value="true" />
      <created>1754409733407</created>
      <option name="number" value="00162" />
      <option name="presentableId" value="LOCAL-00162" />
      <option name="project" value="LOCAL" />
      <updated>1754409733407</updated>
    </task>
    <task id="LOCAL-00163" summary="Created wrappers and shit but need to test it out">
      <option name="closed" value="true" />
      <created>1754413155279</created>
      <option name="number" value="00163" />
      <option name="presentableId" value="LOCAL-00163" />
      <option name="project" value="LOCAL" />
      <updated>1754413155279</updated>
    </task>
    <task id="LOCAL-00164" summary="Code refactor">
      <option name="closed" value="true" />
      <created>1754419583117</created>
      <option name="number" value="00164" />
      <option name="presentableId" value="LOCAL-00164" />
      <option name="project" value="LOCAL" />
      <updated>1754419583117</updated>
    </task>
    <task id="LOCAL-00165" summary="Re did the logic for advice">
      <option name="closed" value="true" />
      <created>1754422520521</created>
      <option name="number" value="00165" />
      <option name="presentableId" value="LOCAL-00165" />
      <option name="project" value="LOCAL" />
      <updated>1754422520521</updated>
    </task>
    <task id="LOCAL-00166" summary="Annotation seems working">
      <option name="closed" value="true" />
      <created>1754423505792</created>
      <option name="number" value="00166" />
      <option name="presentableId" value="LOCAL-00166" />
      <option name="project" value="LOCAL" />
      <updated>1754423505792</updated>
    </task>
    <task id="LOCAL-00167" summary="Added test showing annotations">
      <option name="closed" value="true" />
      <created>1754424994506</created>
      <option name="number" value="00167" />
      <option name="presentableId" value="LOCAL-00167" />
      <option name="project" value="LOCAL" />
      <updated>1754424994506</updated>
    </task>
    <task id="LOCAL-00168" summary="Added return value to annotated block">
      <option name="closed" value="true" />
      <created>1754426433770</created>
      <option name="number" value="00168" />
      <option name="presentableId" value="LOCAL-00168" />
      <option name="project" value="LOCAL" />
      <updated>1754426433770</updated>
    </task>
    <task id="LOCAL-00169" summary="Project structure refactor">
      <option name="closed" value="true" />
      <created>1754463579417</created>
      <option name="number" value="00169" />
      <option name="presentableId" value="LOCAL-00169" />
      <option name="project" value="LOCAL" />
      <updated>1754463579417</updated>
    </task>
    <task id="LOCAL-00170" summary="Fixed bug">
      <option name="closed" value="true" />
      <created>1754463754376</created>
      <option name="number" value="00170" />
      <option name="presentableId" value="LOCAL-00170" />
      <option name="project" value="LOCAL" />
      <updated>1754463754376</updated>
    </task>
    <task id="LOCAL-00171" summary="Adding loggins">
      <option name="closed" value="true" />
      <created>1754464821035</created>
      <option name="number" value="00171" />
      <option name="presentableId" value="LOCAL-00171" />
      <option name="project" value="LOCAL" />
      <updated>1754464821035</updated>
    </task>
    <task id="LOCAL-00172" summary="New design in progress. Super simple and unifed the logger and annotation">
      <option name="closed" value="true" />
      <created>1754467872397</created>
      <option name="number" value="00172" />
      <option name="presentableId" value="LOCAL-00172" />
      <option name="project" value="LOCAL" />
      <updated>1754467872397</updated>
    </task>
    <task id="LOCAL-00173" summary="Added todos and all required components">
      <option name="closed" value="true" />
      <created>1754468017190</created>
      <option name="number" value="00173" />
      <option name="presentableId" value="LOCAL-00173" />
      <option name="project" value="LOCAL" />
      <updated>1754468017190</updated>
    </task>
    <task id="LOCAL-00174" summary="Defined Annotation advice and context maanger">
      <option name="closed" value="true" />
      <created>1754482663639</created>
      <option name="number" value="00174" />
      <option name="presentableId" value="LOCAL-00174" />
      <option name="project" value="LOCAL" />
      <updated>1754482663640</updated>
    </task>
    <task id="LOCAL-00175" summary="Defined VFL annotation">
      <option name="closed" value="true" />
      <created>1754483068020</created>
      <option name="number" value="00175" />
      <option name="presentableId" value="LOCAL-00175" />
      <option name="project" value="LOCAL" />
      <updated>1754483068020</updated>
    </task>
    <task id="LOCAL-00176" summary="Defined VFL annotation">
      <option name="closed" value="true" />
      <created>1754483301467</created>
      <option name="number" value="00176" />
      <option name="presentableId" value="LOCAL-00176" />
      <option name="project" value="LOCAL" />
      <updated>1754483301467</updated>
    </task>
    <task id="LOCAL-00177" summary="VFL annotation works properly now">
      <option name="closed" value="true" />
      <created>1754484051685</created>
      <option name="number" value="00177" />
      <option name="presentableId" value="LOCAL-00177" />
      <option name="project" value="LOCAL" />
      <updated>1754484051685</updated>
    </task>
    <task id="LOCAL-00178" summary="Refactoring in progress. Logic not workign as expected">
      <option name="closed" value="true" />
      <created>1754484968103</created>
      <option name="number" value="00178" />
      <option name="presentableId" value="LOCAL-00178" />
      <option name="project" value="LOCAL" />
      <updated>1754484968103</updated>
    </task>
    <task id="LOCAL-00179" summary="Is buffer broken or something else idk. Probably logic in advice or something">
      <option name="closed" value="true" />
      <created>1754485484072</created>
      <option name="number" value="00179" />
      <option name="presentableId" value="LOCAL-00179" />
      <option name="project" value="LOCAL" />
      <updated>1754485484072</updated>
    </task>
    <task id="LOCAL-00180" summary="Fixed logical bug">
      <option name="closed" value="true" />
      <created>1754485932358</created>
      <option name="number" value="00180" />
      <option name="presentableId" value="LOCAL-00180" />
      <option name="project" value="LOCAL" />
      <updated>1754485932358</updated>
    </task>
    <task id="LOCAL-00181" summary="REmoved fluent">
      <option name="closed" value="true" />
      <created>1754485965257</created>
      <option name="number" value="00181" />
      <option name="presentableId" value="LOCAL-00181" />
      <option name="project" value="LOCAL" />
      <updated>1754485965257</updated>
    </task>
    <task id="LOCAL-00182" summary="Made it so that if logger is not initialized it works fine">
      <option name="closed" value="true" />
      <created>1754486282664</created>
      <option name="number" value="00182" />
      <option name="presentableId" value="LOCAL-00182" />
      <option name="project" value="LOCAL" />
      <updated>1754486282665</updated>
    </task>
    <task id="LOCAL-00183" summary="TODO async fix and a bug">
      <option name="closed" value="true" />
      <created>1754487409400</created>
      <option name="number" value="00183" />
      <option name="presentableId" value="LOCAL-00183" />
      <option name="project" value="LOCAL" />
      <updated>1754487409400</updated>
    </task>
    <task id="LOCAL-00184" summary="fixed bug related to async">
      <option name="closed" value="true" />
      <created>1754495325038</created>
      <option name="number" value="00184" />
      <option name="presentableId" value="LOCAL-00184" />
      <option name="project" value="LOCAL" />
      <updated>1754495325038</updated>
    </task>
    <task id="LOCAL-00185" summary="Added Design Documentation.md">
      <option name="closed" value="true" />
      <created>1754498177124</created>
      <option name="number" value="00185" />
      <option name="presentableId" value="LOCAL-00185" />
      <option name="project" value="LOCAL" />
      <updated>1754498177124</updated>
    </task>
    <task id="LOCAL-00186" summary="Fixed issue of using logger in lambda of a new thread">
      <option name="closed" value="true" />
      <created>1754499842909</created>
      <option name="number" value="00186" />
      <option name="presentableId" value="LOCAL-00186" />
      <option name="project" value="LOCAL" />
      <updated>1754499842909</updated>
    </task>
    <task id="LOCAL-00187" summary="Added road map">
      <option name="closed" value="true" />
      <created>1754502206975</created>
      <option name="number" value="00187" />
      <option name="presentableId" value="LOCAL-00187" />
      <option name="project" value="LOCAL" />
      <updated>1754502206976</updated>
    </task>
    <task id="LOCAL-00188" summary="Created publish block">
      <option name="closed" value="true" />
      <created>1754591023398</created>
      <option name="number" value="00188" />
      <option name="presentableId" value="LOCAL-00188" />
      <option name="project" value="LOCAL" />
      <updated>1754591023398</updated>
    </task>
    <task id="LOCAL-00189" summary="refactor: explicit block initialization and event/distributed logging support&#10;&#10;- Require explicit block start via ensureBlockStarted() for better control flow&#10;- Rename VFLBlock -&gt; SubBlock and VFLAnnotationProcessor -&gt; VFLInitializer&#10;- Rename ContextManager -&gt; ThreadContextManager for clarity&#10;- Add VFLOpStarter and FlowHandler annotations for flow control&#10;- Implement publish() method for event-driven logging with publisher blocks&#10;- Update VFLFutures for improved async operation handling&#10;- Add distributed logging infrastructure for cross-thread operations&#10;- Refactor Main.java to use new explicit initialization pattern&#10;- Update Design Documentation to reflect architectural changes&#10;- Remove log4j2.xml in favor of programmatic logging configuration&#10;&#10;Breaking changes:&#10;- @VFLBlock annotation renamed to @SubBlock&#10;- Block initialization now requires explicit start call&#10;- Context management API changes for thread safety">
      <option name="closed" value="true" />
      <created>1754634490928</created>
      <option name="number" value="00189" />
      <option name="presentableId" value="LOCAL-00189" />
      <option name="project" value="LOCAL" />
      <updated>1754634490928</updated>
    </task>
    <task id="LOCAL-00190" summary="refactor: simplify VFLStarter and streamline context management&#10;&#10;- Complete VFLStarter class with both Supplier&lt;R&gt; and Runnable variants&#10;- Implement Runnable methods as delegates to Supplier versions for DRY principle&#10;- Simplify ThreadContextManager to focus on core context operations only&#10;- Remove complex VFL logger instance from ThreadContextManager&#10;- Move VFL instance creation to Log class as static singleton&#10;- Rename VFLBlockContext → BlockContext and VFLOpStarter → VFLStarter&#10;- Refactor VFL.getContext() to separate getContext() and getBuffer() methods&#10;- Update Configuration class name from VFLAnnotationConfig&#10;- Add AdviceOpLayer as public interface for package-private operations&#10;- Clean up imports and references throughout codebase&#10;&#10;Breaking changes:&#10;- ThreadContextManager API simplified (removed logger and complex context management)&#10;- VFL abstract class now requires separate getBuffer() implementation&#10;- Class renames: VFLBlockContext → BlockContext, VFLOpStarter → VFLStarter">
      <option name="closed" value="true" />
      <created>1754639080296</created>
      <option name="number" value="00190" />
      <option name="presentableId" value="LOCAL-00190" />
      <option name="project" value="LOCAL" />
      <updated>1754639080296</updated>
    </task>
    <task id="LOCAL-00191" summary="feat: add SubBlock advice logic for correct sub-block creation &amp; cleanup&#10;Changes:&#10;&#9;•&#9;Implemented full `VFLAnnotationAdvice` entry/exit logic:&#10;&#9;•&#9;Determines parent context from current stack, spawned thread context, or optional root auto-creation.&#10;&#9;•&#9;Added warnings for missing parent context when `autoCreateRootBlock` is disabled.&#10;&#9;•&#9;Logs detailed sub-block creation with parent info and `startType`.&#10;&#9;•&#9;Closes context and logs exceptions on method exit.&#10;&#9;•&#9;Extended `ThreadContextManager`:&#10;&#9;•&#9;Added `PopCurrentContext`, `PushBlockToThreadLogStack`, and `IsSpawnedThread` helpers.&#10;&#9;•&#9;Enhanced cleanup when top-level context is removed.&#10;&#9;•&#9;Updated `SubBlock` annotation with optional `startMessage` and `endMessage`.&#10;&#9;•&#9;Added `autoCreateRootBlock` flag in `Configuration`.&#10;&#9;•&#9;Minor adjustment: made `Log.INSTANCE` non-private for internal usage.&#10;&#9;•&#9;Refactored `VFLStarter`:&#10;&#9;•&#9;Renamed `ContinueAsBlock` → `StartOperationAsBlock`.&#10;&#9;•&#9;Added `Log.INSTANCE.close()` calls for consistent block closure.&#10;Next step: integrate with `VFLFutures` wrapper for async tracking.">
      <option name="closed" value="true" />
      <created>1754732469809</created>
      <option name="number" value="00191" />
      <option name="presentableId" value="LOCAL-00191" />
      <option name="project" value="LOCAL" />
      <updated>1754732469809</updated>
    </task>
    <task id="LOCAL-00192" summary="feat: finalize SubBlock lifecycle and add async context propagation with VFLFutures&#10;We now fully implement the `@SubBlock` advice logic so sub-blocks are correctly created and tracked, even in edge cases such as missing parent context or execution on spawned threads. The logic will auto-create a root block when enabled, warn if context is missing, and ensure proper cleanup at method exit, including exception logging.&#10;Additionally, the new `VFLFutures` wrapper allows async tasks executed via `CompletableFuture` to inherit correct parent block context. This ensures blocks and logs inside async lambdas are properly linked in the VFL flow across threads and executors, and all thread-local context is cleaned up after execution.&#10;Key changes:&#10;&#9;•&#9;Improved entry/exit advice for `@SubBlock` annotation.&#10;&#9;•&#9;Helper methods for managing context stack, pushed blocks, and spawned thread context.&#10;&#9;•&#9;New `autoCreateRootBlock` config option.&#10;&#9;•&#9;`VFLFutures.supplyAsync` and `VFLFutures.runAsync` now propagate context to threads and clean up after.&#10;&#9;•&#9;Better logging and exception reporting.&#10;&#9;•&#9;Consistent block closure logic on both sync and async operations.">
      <option name="closed" value="true" />
      <created>1754733678437</created>
      <option name="number" value="00192" />
      <option name="presentableId" value="LOCAL-00192" />
      <option name="project" value="LOCAL" />
      <updated>1754733678437</updated>
    </task>
    <task id="LOCAL-00193" summary="feat(log): auto-create lambda sub-blocks for logging in spawned thread contexts&#10;When logging inside a lambda executed via `VFLFutures`, the thread-local block stack may be empty, causing errors or missing context linkage.&#10;This update adds logic in `Log` methods to detect spawned threads with no active block context and automatically start a temporary lambda sub-block linked to the originating parent context.&#10;Key changes:&#10;&#9;•&#9;Added `startLambdaSubBlock()` to `Log` to create and push a sub-block when logging in spawned threads without context.&#10;&#9;•&#9;Injected this check into all `Info`, `Warn`, and `Error` logging variants (sync and function forms).&#10;&#9;•&#9;Standardized spawned thread initialization via new `ThreadContextManager.InitializeSpawnedThreadContext(...)`.&#10;&#9;•&#9;Updated `VFLFutures` to use the new initialization method for both join and no-join async execution.&#10;Impact:&#10;&#9;•&#9;Ensures logs inside `CompletableFuture` lambdas are correctly linked to the VFL flow.&#10;&#9;•&#9;Prevents `NullPointerException` from empty thread-local context stacks in async scenarios.&#10;&#9;•&#9;Improves async/sub-block lifecycle consistency across threads.">
      <option name="closed" value="true" />
      <created>1754736537364</created>
      <option name="number" value="00193" />
      <option name="presentableId" value="LOCAL-00193" />
      <option name="project" value="LOCAL" />
      <updated>1754736537364</updated>
    </task>
    <task id="LOCAL-00194" summary="feat(log): add sub-block start log when auto-creating lambda sub-blocks&#10;&#10;When creating a lambda sub-block in spawned threads, also push a&#10;SUB_BLOCK_START_PRIMARY log to the buffer and update the parent&#10;context’s currentLogId for proper flow linking.">
      <option name="closed" value="true" />
      <created>1754737019067</created>
      <option name="number" value="00194" />
      <option name="presentableId" value="LOCAL-00194" />
      <option name="project" value="LOCAL" />
      <updated>1754737019067</updated>
    </task>
    <task id="LOCAL-00195" summary="feat: refactor context management and block lifecycle for async/sub-block operations&#10;&#10;- Remove spawned thread context; all async operations now use local block context.&#10;- Refactor ThreadContextManager: unify stack initialization and block closing APIs.&#10;- VFLFutures now create and manage lambda sub-blocks directly, ensuring proper context and log linkage in async flows.&#10;- Rename VFLStarter.StartOperation → StartRootBlock; clarify method usage and cleanup logic.&#10;- Update BlockContext with isLambdaBlock flag for future lambda block identification.&#10;- Generalize sub-block creation and closure for improved correctness across sync/async/threaded use cases.">
      <option name="closed" value="true" />
      <created>1754740208758</created>
      <option name="number" value="00195" />
      <option name="presentableId" value="LOCAL-00195" />
      <option name="project" value="LOCAL" />
      <updated>1754740208758</updated>
    </task>
    <task id="LOCAL-00196" summary="Removed concept of auto start root block">
      <option name="closed" value="true" />
      <created>1754801859364</created>
      <option name="number" value="00196" />
      <option name="presentableId" value="LOCAL-00196" />
      <option name="project" value="LOCAL" />
      <updated>1754801859364</updated>
    </task>
    <task id="LOCAL-00197" summary="feat(config): introduce VFLAnnotationConfig for centralized annotation configuration&#10;&#10;- Replaced `Configuration` singleton with new `VFLAnnotationConfig` class to hold `disabled` flag and `VFLBuffer` reference.&#10;- Updated all annotation-related components (`Log`, `VFLAnnotationAdvice`, `VFLFutures`, `VFLStarter`) to read buffer/config from `VFLInitializer.VFLAnnotationConfig` instead of `Configuration.INSTANCE`.&#10;- Enhanced `VFLInitializer` to accept `VFLAnnotationConfig` on initialization and added `IsEnabled()` check for feature gating.&#10;- Removed &quot;auto start root block&quot; logic; block creation now explicitly depends on configuration state.&#10;- Updated logging to use framework `Log` methods instead of raw SLF4J loggers in `ThreadContextManager`.&#10;- Adjusted block naming in `VFLFutures` (now differentiating JOIN vs NO_JOIN cases).&#10;- Documentation updates (`README.md`, `mds/*`) to rename “Configuration” references to “VFLAnnotationConfig”.&#10;&#10;Impact:&#10;Provides a single, configurable entry point for enabling/disabling VFL instrumentation and supplying the buffer, improving flexibility and maintainability.">
      <option name="closed" value="true" />
      <created>1754803125831</created>
      <option name="number" value="00197" />
      <option name="presentableId" value="LOCAL-00197" />
      <option name="project" value="LOCAL" />
      <updated>1754803125831</updated>
    </task>
    <task id="LOCAL-00198" summary="refactor(core): encapsulate complex logic and reduce API surface&#10;&#10;- Moved method enter/exit logic from static annotated methods in `VFLAnnotationAdvice` to instance methods, keeping static hooks minimal while preserving ByteBuddy integration.&#10;- Introduced public `instance` singleton in `VFLAnnotationAdvice` for delegated logic invocation.&#10;- Restricted `ThreadContextManager` class and methods to package-private, reducing its public API footprint.&#10;- Replaced `IsEnabled()` checks with `isDisabled()` for simpler early-return logic across `VFLFutures` and `VFLStarter`.&#10;- Removed obsolete `AdviceOpLayer.java`.&#10;- Added explicit reference to `VFLAnnotationAdvice.instance` in `Main` to ensure initialization.">
      <option name="closed" value="true" />
      <created>1754804468758</created>
      <option name="number" value="00198" />
      <option name="presentableId" value="LOCAL-00198" />
      <option name="project" value="LOCAL" />
      <updated>1754804468758</updated>
    </task>
    <task id="LOCAL-00199" summary="Removed log4j2.xml from build path">
      <option name="closed" value="true" />
      <created>1754861799935</created>
      <option name="number" value="00199" />
      <option name="presentableId" value="LOCAL-00199" />
      <option name="project" value="LOCAL" />
      <updated>1754861799935</updated>
    </task>
    <task id="LOCAL-00200" summary="Added log4j again">
      <option name="closed" value="true" />
      <created>1754862118457</created>
      <option name="number" value="00200" />
      <option name="presentableId" value="LOCAL-00200" />
      <option name="project" value="LOCAL" />
      <updated>1754862118457</updated>
    </task>
    <task id="LOCAL-00201" summary="“Added log4j back to the project and refactored buffer flush methods&#10;&#9;•&#9;Re-added log4j configuration and related changes previously removed&#10;&#9;•&#9;Refactored buffer interfaces and implementations to rename flushAndClose() to flush()&#10;&#9;•&#9;Updated VFLStarter to explicitly flush buffer after context cleanup&#10;&#9;•&#9;Added TODO comments in Main.java for RootBlock annotation and buffer flush sanity check&#10;&#9;•&#9;Enhanced async test in AnnotationTest with improved thread pool and logging">
      <option name="closed" value="true" />
      <created>1754863180441</created>
      <option name="number" value="00201" />
      <option name="presentableId" value="LOCAL-00201" />
      <option name="project" value="LOCAL" />
      <updated>1754863180441</updated>
    </task>
    <option name="localTasksCounter" value="202" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="VFL annotation works properly now" />
    <MESSAGE value="Refactoring in progress. Logic not workign as expected" />
    <MESSAGE value="Is buffer broken or something else idk. Probably logic in advice or something" />
    <MESSAGE value="Fixed logical bug" />
    <MESSAGE value="REmoved fluent" />
    <MESSAGE value="Made it so that if logger is not initialized it works fine" />
    <MESSAGE value="TODO async fix and a bug" />
    <MESSAGE value="fixed bug related to async" />
    <MESSAGE value="Added Design Documentation.md" />
    <MESSAGE value="Fixed issue of using logger in lambda of a new thread" />
    <MESSAGE value="Added road map" />
    <MESSAGE value="Created publish block" />
    <MESSAGE value="refactor: explicit block initialization and event/distributed logging support&#10;&#10;- Require explicit block start via ensureBlockStarted() for better control flow&#10;- Rename VFLBlock -&gt; SubBlock and VFLAnnotationProcessor -&gt; VFLInitializer&#10;- Rename ContextManager -&gt; ThreadContextManager for clarity&#10;- Add VFLOpStarter and FlowHandler annotations for flow control&#10;- Implement publish() method for event-driven logging with publisher blocks&#10;- Update VFLFutures for improved async operation handling&#10;- Add distributed logging infrastructure for cross-thread operations&#10;- Refactor Main.java to use new explicit initialization pattern&#10;- Update Design Documentation to reflect architectural changes&#10;- Remove log4j2.xml in favor of programmatic logging configuration&#10;&#10;Breaking changes:&#10;- @VFLBlock annotation renamed to @SubBlock&#10;- Block initialization now requires explicit start call&#10;- Context management API changes for thread safety" />
    <MESSAGE value="refactor: simplify VFLStarter and streamline context management&#10;&#10;- Complete VFLStarter class with both Supplier&lt;R&gt; and Runnable variants&#10;- Implement Runnable methods as delegates to Supplier versions for DRY principle&#10;- Simplify ThreadContextManager to focus on core context operations only&#10;- Remove complex VFL logger instance from ThreadContextManager&#10;- Move VFL instance creation to Log class as static singleton&#10;- Rename VFLBlockContext → BlockContext and VFLOpStarter → VFLStarter&#10;- Refactor VFL.getContext() to separate getContext() and getBuffer() methods&#10;- Update Configuration class name from VFLAnnotationConfig&#10;- Add AdviceOpLayer as public interface for package-private operations&#10;- Clean up imports and references throughout codebase&#10;&#10;Breaking changes:&#10;- ThreadContextManager API simplified (removed logger and complex context management)&#10;- VFL abstract class now requires separate getBuffer() implementation&#10;- Class renames: VFLBlockContext → BlockContext, VFLOpStarter → VFLStarter" />
    <MESSAGE value="feat: add SubBlock advice logic for correct sub-block creation &amp; cleanup&#10;Changes:&#10;&#9;•&#9;Implemented full `VFLAnnotationAdvice` entry/exit logic:&#10;&#9;•&#9;Determines parent context from current stack, spawned thread context, or optional root auto-creation.&#10;&#9;•&#9;Added warnings for missing parent context when `autoCreateRootBlock` is disabled.&#10;&#9;•&#9;Logs detailed sub-block creation with parent info and `startType`.&#10;&#9;•&#9;Closes context and logs exceptions on method exit.&#10;&#9;•&#9;Extended `ThreadContextManager`:&#10;&#9;•&#9;Added `PopCurrentContext`, `PushBlockToThreadLogStack`, and `IsSpawnedThread` helpers.&#10;&#9;•&#9;Enhanced cleanup when top-level context is removed.&#10;&#9;•&#9;Updated `SubBlock` annotation with optional `startMessage` and `endMessage`.&#10;&#9;•&#9;Added `autoCreateRootBlock` flag in `Configuration`.&#10;&#9;•&#9;Minor adjustment: made `Log.INSTANCE` non-private for internal usage.&#10;&#9;•&#9;Refactored `VFLStarter`:&#10;&#9;•&#9;Renamed `ContinueAsBlock` → `StartOperationAsBlock`.&#10;&#9;•&#9;Added `Log.INSTANCE.close()` calls for consistent block closure.&#10;Next step: integrate with `VFLFutures` wrapper for async tracking." />
    <MESSAGE value="feat: finalize SubBlock lifecycle and add async context propagation with VFLFutures&#10;We now fully implement the `@SubBlock` advice logic so sub-blocks are correctly created and tracked, even in edge cases such as missing parent context or execution on spawned threads. The logic will auto-create a root block when enabled, warn if context is missing, and ensure proper cleanup at method exit, including exception logging.&#10;Additionally, the new `VFLFutures` wrapper allows async tasks executed via `CompletableFuture` to inherit correct parent block context. This ensures blocks and logs inside async lambdas are properly linked in the VFL flow across threads and executors, and all thread-local context is cleaned up after execution.&#10;Key changes:&#10;&#9;•&#9;Improved entry/exit advice for `@SubBlock` annotation.&#10;&#9;•&#9;Helper methods for managing context stack, pushed blocks, and spawned thread context.&#10;&#9;•&#9;New `autoCreateRootBlock` config option.&#10;&#9;•&#9;`VFLFutures.supplyAsync` and `VFLFutures.runAsync` now propagate context to threads and clean up after.&#10;&#9;•&#9;Better logging and exception reporting.&#10;&#9;•&#9;Consistent block closure logic on both sync and async operations." />
    <MESSAGE value="feat(log): auto-create lambda sub-blocks for logging in spawned thread contexts&#10;When logging inside a lambda executed via `VFLFutures`, the thread-local block stack may be empty, causing errors or missing context linkage.&#10;This update adds logic in `Log` methods to detect spawned threads with no active block context and automatically start a temporary lambda sub-block linked to the originating parent context.&#10;Key changes:&#10;&#9;•&#9;Added `startLambdaSubBlock()` to `Log` to create and push a sub-block when logging in spawned threads without context.&#10;&#9;•&#9;Injected this check into all `Info`, `Warn`, and `Error` logging variants (sync and function forms).&#10;&#9;•&#9;Standardized spawned thread initialization via new `ThreadContextManager.InitializeSpawnedThreadContext(...)`.&#10;&#9;•&#9;Updated `VFLFutures` to use the new initialization method for both join and no-join async execution.&#10;Impact:&#10;&#9;•&#9;Ensures logs inside `CompletableFuture` lambdas are correctly linked to the VFL flow.&#10;&#9;•&#9;Prevents `NullPointerException` from empty thread-local context stacks in async scenarios.&#10;&#9;•&#9;Improves async/sub-block lifecycle consistency across threads." />
    <MESSAGE value="feat(log): add sub-block start log when auto-creating lambda sub-blocks&#10;&#10;When creating a lambda sub-block in spawned threads, also push a&#10;SUB_BLOCK_START_PRIMARY log to the buffer and update the parent&#10;context’s currentLogId for proper flow linking." />
    <MESSAGE value="feat: refactor context management and block lifecycle for async/sub-block operations&#10;&#10;- Remove spawned thread context; all async operations now use local block context.&#10;- Refactor ThreadContextManager: unify stack initialization and block closing APIs.&#10;- VFLFutures now create and manage lambda sub-blocks directly, ensuring proper context and log linkage in async flows.&#10;- Rename VFLStarter.StartOperation → StartRootBlock; clarify method usage and cleanup logic.&#10;- Update BlockContext with isLambdaBlock flag for future lambda block identification.&#10;- Generalize sub-block creation and closure for improved correctness across sync/async/threaded use cases." />
    <MESSAGE value="Removed concept of auto start root block" />
    <MESSAGE value="feat(config): introduce VFLAnnotationConfig for centralized annotation configuration&#10;&#10;- Replaced `Configuration` singleton with new `VFLAnnotationConfig` class to hold `disabled` flag and `VFLBuffer` reference.&#10;- Updated all annotation-related components (`Log`, `VFLAnnotationAdvice`, `VFLFutures`, `VFLStarter`) to read buffer/config from `VFLInitializer.VFLAnnotationConfig` instead of `Configuration.INSTANCE`.&#10;- Enhanced `VFLInitializer` to accept `VFLAnnotationConfig` on initialization and added `IsEnabled()` check for feature gating.&#10;- Removed &quot;auto start root block&quot; logic; block creation now explicitly depends on configuration state.&#10;- Updated logging to use framework `Log` methods instead of raw SLF4J loggers in `ThreadContextManager`.&#10;- Adjusted block naming in `VFLFutures` (now differentiating JOIN vs NO_JOIN cases).&#10;- Documentation updates (`README.md`, `mds/*`) to rename “Configuration” references to “VFLAnnotationConfig”.&#10;&#10;Impact:&#10;Provides a single, configurable entry point for enabling/disabling VFL instrumentation and supplying the buffer, improving flexibility and maintainability." />
    <MESSAGE value="refactor(core): encapsulate complex logic and reduce API surface&#10;&#10;- Moved method enter/exit logic from static annotated methods in `VFLAnnotationAdvice` to instance methods, keeping static hooks minimal while preserving ByteBuddy integration.&#10;- Introduced public `instance` singleton in `VFLAnnotationAdvice` for delegated logic invocation.&#10;- Restricted `ThreadContextManager` class and methods to package-private, reducing its public API footprint.&#10;- Replaced `IsEnabled()` checks with `isDisabled()` for simpler early-return logic across `VFLFutures` and `VFLStarter`.&#10;- Removed obsolete `AdviceOpLayer.java`.&#10;- Added explicit reference to `VFLAnnotationAdvice.instance` in `Main` to ensure initialization." />
    <MESSAGE value="Removed log4j2.xml from build path" />
    <MESSAGE value="Added log4j again" />
    <MESSAGE value="“Added log4j back to the project and refactored buffer flush methods&#10;&#9;•&#9;Re-added log4j configuration and related changes previously removed&#10;&#9;•&#9;Refactored buffer interfaces and implementations to rename flushAndClose() to flush()&#10;&#9;•&#9;Updated VFLStarter to explicitly flush buffer after context cleanup&#10;&#9;•&#9;Added TODO comments in Main.java for RootBlock annotation and buffer flush sanity check&#10;&#9;•&#9;Enhanced async test in AnnotationTest with improved thread pool and logging" />
    <option name="LAST_COMMIT_MESSAGE" value="“Added log4j back to the project and refactored buffer flush methods&#10;&#9;•&#9;Re-added log4j configuration and related changes previously removed&#10;&#9;•&#9;Refactored buffer interfaces and implementations to rename flushAndClose() to flush()&#10;&#9;•&#9;Updated VFLStarter to explicitly flush buffer after context cleanup&#10;&#9;•&#9;Added TODO comments in Main.java for RootBlock annotation and buffer flush sanity check&#10;&#9;•&#9;Enhanced async test in AnnotationTest with improved thread pool and logging" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/dev/kuku/vfl/contextualVFLogger/ContextualVFL.java</url>
          <line>19</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/dev/kuku/vfl/contextualVFLogger/ContextualVFLRunner.java</url>
          <line>25</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/dev/kuku/vfl/impl/supplied/SuppliedVFL.java</url>
          <line>14</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.IllegalAccessError" package="java.lang" />
          <option name="timeStamp" value="8" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.lang.ThreadLocal" memberName="threadLocalHashCode" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="((ThreadSafeSynchronousVflBuffer)buffer).logsToFlush" custom="dev.kuku.vfl.core.buffer.ThreadSafeSynchronousVflBuffer" />
        <watch expression="((ThreadSafeSynchronousVflBuffer)buffer).blocksToFlush" custom="dev.kuku.vfl.core.buffer.ThreadSafeSynchronousVflBuffer" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>